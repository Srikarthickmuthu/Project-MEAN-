{"ast":null,"code":"import _asyncToGenerator from \"/home/asplap3262/Desktop/Project(MEAN)/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CartComponent = class CartComponent {\n  constructor(userservice, toastr) {\n    this.userservice = userservice;\n    this.toastr = toastr;\n    this.cart = [];\n    this.product = [];\n    this.user = localStorage.getItem('Active-User');\n  }\n  ngOnInit() {\n    this.getCart();\n  }\n  getCart() {\n    this.userservice.getCart(this.user, \"Ordered\").subscribe(res => {\n      this.cart = res;\n      if (this.cart.length == 0) {\n        localStorage.removeItem('id');\n      }\n    }, err => {\n      this.toastr.error(`${err.status} Error ${err.name}`);\n    });\n    return this.cart;\n  }\n  delete(data) {\n    const confirm = window.confirm(\"Are you sure you want to remove this item?\");\n    if (confirm == true) {\n      this.userservice.delete(data).subscribe(() => {\n        this.getCart();\n        this.toastr.warning('Product removed ..!');\n      }, err => {\n        this.toastr.error(`${err.status} Error ${err.name}`);\n      });\n    }\n  }\n  increment(data, name) {\n    if (data.quantity >= 10) {\n      this.toastr.info('You can add upto 10 units only !');\n      data.quantity = 10;\n    } else if (data.quantity >= 1) {\n      data.quantity++;\n      data.total = data.productPrice * data.quantity;\n      this.cart.map(element => {\n        if (element.productName == name) {\n          return this.id = element._id;\n        }\n      });\n      this.userservice.updateDelivery(this.id, data).subscribe(() => {\n        this.getCart();\n      }, err => {\n        this.toastr.error(`${err.status} Error ${err.name}`);\n      });\n    }\n  }\n  decrement(data, name) {\n    if (data.quantity > 1) {\n      data.quantity--;\n      data.total = data.productPrice * data.quantity;\n      this.cart.map(element => {\n        if (element.productName == name) {\n          return this.id = element._id;\n        }\n      });\n      this.userservice.updateDelivery(this.id, data).subscribe(() => {\n        this.getCart();\n      }, err => {\n        this.toastr.error(`${err.status} Error ${err.name}`);\n      });\n    } else if (data.quantity = 1) {\n      this.delete(this.id);\n    }\n  }\n  checkout() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      for (const element of _this.cart) {\n        element.deliveryStatus = 'Out for delivery';\n        const id = element._id;\n        yield _this.userservice.updateDelivery(id, element).toPromise();\n      }\n      _this.getCart();\n    })();\n  }\n};\nCartComponent = __decorate([Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})], CartComponent);\nexport { CartComponent };","map":{"version":3,"mappings":"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","names":["Component","CartComponent","constructor","userservice","toastr","localStorage","getItem","ngOnInit","getCart","user","subscribe","res","cart","length","removeItem","err","error","status","name","delete","data","confirm","window","warning","increment","quantity","info","total","productPrice","map","element","productName","id","_id","updateDelivery","decrement","checkout","deliveryStatus","toPromise","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/asplap3262/Desktop/Project(MEAN)/front-end/src/app/home/cart/cart.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { errorMessage } from 'src/app/Services/Guard/product';\nimport { UserService } from 'src/app/Services/user.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css'],\n})\nexport class CartComponent implements OnInit {\n  public cart: any = [];\n  public product: any = [];\n  public product1: any;\n  public uniqueCart: any;\n  public id: any;\n  user = localStorage.getItem('Active-User');\n  constructor(public userservice: UserService, public toastr: ToastrService) {}\n\n  ngOnInit() {\n    this.getCart();\n  }\n\n  getCart() {\n    this.userservice.getCart(this.user,\"Ordered\").subscribe(\n      (res: any) => {\n        this.cart=res\n        if (this.cart.length == 0) {\n          localStorage.removeItem('id');\n        }\n      },\n      (err: errorMessage) => {\n        this.toastr.error(`${err.status} Error ${err.name}`);\n      }\n    );\n    return this.cart;\n  }\n\n  delete(data: number) {\n    const confirm= window.confirm(\"Are you sure you want to remove this item?\")\n    if(confirm==true){\n      this.userservice.delete(data).subscribe(\n        () => {\n          this.getCart();\n          this.toastr.warning('Product removed ..!');\n        },\n        (err: errorMessage) => {\n          this.toastr.error(`${err.status} Error ${err.name}`);\n        }\n      );\n    }\n  }\n  increment(data: any, name: string) {\n    if (data.quantity >= 10) {\n      this.toastr.info('You can add upto 10 units only !');\n      data.quantity = 10;\n    } else if (data.quantity >= 1) {\n      data.quantity++;\n      data.total = data.productPrice * data.quantity;\n      this.cart.map((element: any) => {\n        if (element.productName == name) {\n          return (this.id = element._id);\n        }\n      });\n      this.userservice.updateDelivery(this.id, data).subscribe(\n        () => {\n          this.getCart();\n        },\n        (err: errorMessage) => {\n          this.toastr.error(`${err.status} Error ${err.name}`);\n        }\n      );\n    }\n  }\n  decrement(data: any, name: string) {\n    if (data.quantity > 1) {\n      data.quantity--;\n      data.total = data.productPrice * data.quantity;\n      this.cart.map((element: any) => {\n        if (element.productName == name) {\n          return (this.id = element._id);\n        }\n      });\n      this.userservice.updateDelivery(this.id, data).subscribe(\n        () => {\n          this.getCart();\n        },\n        (err: errorMessage) => {\n          this.toastr.error(`${err.status} Error ${err.name}`);\n        }\n      );\n    } else if ((data.quantity = 1)) {\n      this.delete(this.id);\n    }\n  }\n async checkout() {\n  for (const element of this.cart) {\n    element.deliveryStatus = 'Out for delivery';\n    const id = element._id;\n    await this.userservice.updateDelivery(id, element).toPromise();\n  }\n  this.getCart();\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}