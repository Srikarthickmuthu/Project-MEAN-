{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { CartComponent } from \"../cart/cart.component\";\nlet ViewproductComponent = class ViewproductComponent {\n  constructor(adminservice, userservice, toastr, router) {\n    this.adminservice = adminservice;\n    this.userservice = userservice;\n    this.toastr = toastr;\n    this.router = router;\n    this.product1 = [];\n    this.id = [];\n    this.id1 = [];\n    this.idValue = \"\";\n    this.user = localStorage.getItem(\"Active-User\");\n  }\n  ngOnInit() {\n    this.adminservice.getProduct().subscribe(res => {\n      this.product = res;\n    }, err => {\n      this.toastr.error(`${err.status} Error ${err.name}`);\n    });\n    this.getCart();\n  }\n  cart(data) {\n    if (this.user != null) {\n      this.id.push(data.productName);\n      data.userId = this.user;\n      data.deliveryStatus = \"Ordered\";\n      data.quantity = 1;\n      data.total = data.productPrice;\n      this.userservice.addProduct(data).subscribe(() => {\n        this.toastr.success(\"Product added to the cart..!\");\n        data.show = false;\n      }, err => {\n        this.toastr.error(`${err.status} Error ${err.name}`);\n      });\n      delete data._id;\n    } else {\n      this.toastr.warning(\"Please login before continue..!\");\n      setTimeout(() => {\n        this.router.navigate([\"/loginSignUp-path/login-path\"]);\n      }, 500);\n    }\n  }\n  getCart() {\n    this.userservice.getCart(this.user, \"Ordered\").subscribe(res => {\n      this.cart1 = res;\n      this.cart1.map(element => {\n        this.id.push(element.productName);\n        localStorage.setItem(\"id\", this.id);\n      });\n    });\n    setTimeout(() => {\n      this.id1 = localStorage.getItem(\"id\")?.split(\",\");\n      this.product.map(element => {\n        if (this.id1 != undefined) {\n          if (this.id1.includes(element.productName)) {\n            element.show = false;\n            return this.product1.push(element);\n          } else {\n            return this.product1.push(element);\n          }\n        } else {\n          this.product1 = this.product;\n        }\n      });\n    }, 1000);\n  }\n  added() {\n    this.toastr.info(\"Item is already added to the cart..!\");\n  }\n};\nViewproductComponent = __decorate([Component({\n  selector: \"app-viewproduct\",\n  templateUrl: \"./viewproduct.component.html\",\n  styleUrls: [\"./viewproduct.component.css\"],\n  providers: [CartComponent]\n})], ViewproductComponent);\nexport { ViewproductComponent };","map":{"version":3,"mappings":"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","names":["Component","CartComponent","ViewproductComponent","constructor","adminservice","userservice","toastr","router","localStorage","getItem","ngOnInit","getProduct","subscribe","res","product","err","error","status","name","getCart","cart","data","user","id","push","productName","userId","deliveryStatus","quantity","total","productPrice","addProduct","success","show","_id","warning","setTimeout","navigate","cart1","map","element","setItem","id1","split","undefined","includes","product1","added","info","selector","templateUrl","styleUrls","providers"],"sourceRoot":"","sources":["/home/asplap3262/Desktop/Project(MEAN)/front-end/src/app/home/viewproduct/viewproduct.component.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { AddProduct, errorMessage } from \"src/app/Services/Guard/product\";\nimport { AdminService } from \"src/app/Services/admin.service\";\nimport { UserService } from \"src/app/Services/user.service\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Router } from \"@angular/router\";\nimport { CartComponent } from \"../cart/cart.component\";\n\n@Component({\n  selector: \"app-viewproduct\",\n  templateUrl: \"./viewproduct.component.html\",\n  styleUrls: [\"./viewproduct.component.css\"],\n  providers: [CartComponent],\n})\nexport class ViewproductComponent implements OnInit {\n  public product!: AddProduct[];\n  public product1: any = [];\n  public cart1!: AddProduct[];\n  public id: any = [];\n  public id1: any = [];\n  public idValue = \"\";\n  constructor(\n    public adminservice: AdminService,\n    public userservice: UserService,\n    private toastr: ToastrService,\n    private router: Router\n  ) {}\n  ngOnInit() {\n    this.adminservice.getProduct().subscribe(\n      (res: AddProduct[]) => {\n        this.product = res;\n      },\n      (err: errorMessage) => {\n        this.toastr.error(`${err.status} Error ${err.name}`);\n      }\n    );\n    this.getCart();\n  }\n  user = localStorage.getItem(\"Active-User\");\n\n  cart(data: any) {\n    if (this.user != null) {\n      this.id.push(data.productName);\n      data.userId = this.user;\n      data.deliveryStatus = \"Ordered\";\n      data.quantity = 1;\n      data.total = data.productPrice;\n      this.userservice.addProduct(data).subscribe(\n        () => {\n          this.toastr.success(\"Product added to the cart..!\");\n          data.show = false;\n        },\n        (err: errorMessage) => {\n          this.toastr.error(`${err.status} Error ${err.name}`);\n        }\n      );\n      delete data._id;\n    } else {\n      this.toastr.warning(\"Please login before continue..!\");\n      setTimeout(() => {\n        this.router.navigate([\"/loginSignUp-path/login-path\"]);\n      }, 500);\n    }\n  }\n\n  getCart() {\n    this.userservice.getCart(this.user,\"Ordered\").subscribe((res: any) => {\n      this.cart1=res\n      this.cart1.map((element: any) => {\n        this.id.push(element.productName);\n        localStorage.setItem(\"id\", this.id);\n      });\n    });\n    setTimeout(() => {\n      this.id1 = localStorage.getItem(\"id\")?.split(\",\");\n      this.product.map((element: any) => {\n        if (this.id1 != undefined) {\n          if (this.id1.includes(element.productName)) {\n            element.show = false;\n            return this.product1.push(element);\n          } else {\n            return this.product1.push(element);\n          }\n        } else {\n          this.product1 = this.product;\n        }\n      });\n    }, 1000);\n  }\n  added() {\n    this.toastr.info(\"Item is already added to the cart..!\");\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}