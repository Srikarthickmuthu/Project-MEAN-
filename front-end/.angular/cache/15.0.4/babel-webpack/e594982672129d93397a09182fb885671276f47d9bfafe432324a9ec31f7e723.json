{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/user.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../home/navbar/navbar.component\";\nfunction SignUpComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Please enter valid number\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Please enter valid mail-id\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password is required in requested format e.g Abcd@123 \");\n    i0.ɵɵelementEnd();\n  }\n}\n// import jwt from 'jwt-encode';\nexport class SignUpComponent {\n  constructor(userservice, toastr, router) {\n    this.userservice = userservice;\n    this.toastr = toastr;\n    this.router = router;\n    this.mobNumberPattern = /^((\\+91-?)|0)?[0-9]{10}$/;\n    this.Emailpattern = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\n    this.passwordPattern = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$/;\n  }\n  onSubmit(myForm) {\n    myForm.value.password = jwt.sign(myForm.value.password, \"secret\");\n    console.log(myForm.value);\n    this.userservice.addUser(myForm.value).subscribe(() => {\n      this.handleSuccess(myForm);\n    }, err => {\n      this.handleError(err);\n    });\n  }\n  handleSuccess(myForm) {\n    myForm.resetForm();\n    this.toastr.success('Sign-up Successfull..!');\n    this.router.navigate(['/loginSignUp-path/login-path']);\n  }\n  handleError(err) {\n    this.toastr.error(`${err.status} Error ${err.name}`);\n  }\n}\nSignUpComponent.ɵfac = function SignUpComponent_Factory(t) {\n  return new (t || SignUpComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.Router));\n};\nSignUpComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignUpComponent,\n  selectors: [[\"app-sign-up\"]],\n  decls: 24,\n  vars: 6,\n  consts: [[\"id\", \"container\", 1, \"container\"], [3, \"ngSubmit\"], [\"userForm\", \"ngForm\"], [\"id\", \"fname\", \"name\", \"fname\", \"type\", \"text\", \"placeholder\", \"Enter your first name\", \"autocomplete\", \"off\", \"ngModel\", \"\", \"required\", \"\", \"fname\", \"\", 1, \"formcontrol\"], [\"id\", \"lname\", \"name\", \"lname\", \"type\", \"text\", \"placeholder\", \"Enter your last name\", \"autocomplete\", \"off\", \"ngModel\", \"\", \"required\", \"\", \"lname\", \"\", 1, \"formcontrol\"], [\"id\", \"number\", \"name\", \"number\", \"type\", \"text\", \"placeholder\", \"Enter your Mobile Number\", \"autocomplete\", \"off\", \"ngModel\", \"\", \"required\", \"\", \"number\", \"\", 1, \"formcontrol\", 3, \"pattern\"], [\"number\", \"ngModel\"], [4, \"ngIf\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", \"placeholder\", \"Enter your Mail Id\", \"autocomplete\", \"off\", \"ngModel\", \"\", \"required\", \"email\", \"email\", \"\", 1, \"formcontrol\"], [\"email\", \"ngModel\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"placeholder\", \"Enter the new passsword\", \"autocomplete\", \"off\", \"ngModel\", \"\", \"required\", \"\", \"password\", \"\", 1, \"formcontrol\", 3, \"pattern\"], [\"password\", \"ngModel\"], [3, \"disabled\"], [\"routerLink\", \"/loginSignUp-path/login-path\"]],\n  template: function SignUpComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelement(0, \"app-navbar\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function SignUpComponent_Template_form_ngSubmit_2_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(3);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(4, \"h1\");\n      i0.ɵɵtext(5, \"Sign-up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\");\n      i0.ɵɵelement(7, \"input\", 3)(8, \"input\", 4)(9, \"input\", 5, 6);\n      i0.ɵɵtemplate(11, SignUpComponent_span_11_Template, 2, 0, \"span\", 7);\n      i0.ɵɵelement(12, \"input\", 8, 9);\n      i0.ɵɵtemplate(14, SignUpComponent_span_14_Template, 2, 0, \"span\", 7);\n      i0.ɵɵelement(15, \"input\", 10, 11);\n      i0.ɵɵtemplate(17, SignUpComponent_span_17_Template, 2, 0, \"span\", 7);\n      i0.ɵɵelementStart(18, \"div\")(19, \"button\", 12);\n      i0.ɵɵtext(20, \"Submit\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\")(22, \"button\", 13);\n      i0.ɵɵtext(23, \"Login\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(3);\n      const _r1 = i0.ɵɵreference(10);\n      const _r3 = i0.ɵɵreference(13);\n      const _r5 = i0.ɵɵreference(16);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"pattern\", ctx.mobNumberPattern);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !_r1.valid && _r1.touched);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !_r3.valid && _r3.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"pattern\", ctx.passwordPattern);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !_r5.valid && _r5.touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n    }\n  },\n  dependencies: [i4.NgIf, i3.RouterLink, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.PatternValidator, i5.EmailValidator, i5.NgModel, i5.NgForm, i6.NavbarComponent],\n  styles: [\"*[_ngcontent-%COMP%] {\\n  box-sizing: border-box;\\n}\\nh1[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n}\\nform[_ngcontent-%COMP%] {\\n  background-color: #ffffff;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n  padding: 10px 40px;\\n  height: 100%;\\n  text-align: center;\\n}\\n.formcontrol[_ngcontent-%COMP%]{\\n  background-color: rgb(234, 233, 233);\\n  border: none;\\n  padding: 12px 15px;\\n  margin: 8px 0;\\n  width: 100%;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n  background-color: #fff;\\n  border-radius: 10px;\\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\\n  margin-left: auto;\\n  margin-right: auto;\\n  min-height: 520px;\\n  max-width: 600px;\\n  min-width: 600px;\\n}\\nbutton[_ngcontent-%COMP%] {\\n  border-radius: 20px;\\n  background-color: #3a47d5;\\n  color: #ffffff;\\n  font-size: 12px;\\n  font-weight: bold;\\n  padding: 12px 50px;\\n  cursor: pointer;\\n}\\n.formcontrol.ng-invalid.ng-touched[_ngcontent-%COMP%] {\\n  border: 3px solid red;\\n}\\n#gender[_ngcontent-%COMP%]{\\n  display: flex;\\n  padding: 20px 150px;\\n}\\ndiv[_ngcontent-%COMP%]{\\n  padding-top: 18px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBc0I7QUFDeEI7QUFDQTtFQUNFLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UseUJBQXlCO0VBQ3pCLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0Usb0NBQW9DO0VBQ3BDLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsNEVBQTRFO0VBQzVFLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLG1CQUFtQjtFQUNuQix5QkFBeUI7RUFDekIsY0FBYztFQUNkLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7QUFDQTtFQUNFLHFCQUFxQjtBQUN2QjtBQUNBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UsaUJBQWlCO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5oMSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuZm9ybSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwYWRkaW5nOiAxMHB4IDQwcHg7XG4gIGhlaWdodDogMTAwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmZvcm1jb250cm9se1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM0LCAyMzMsIDIzMyk7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMTJweCAxNXB4O1xuICBtYXJnaW46IDhweCAwO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJveC1zaGFkb3c6IDAgMTRweCAyOHB4IHJnYmEoMCwgMCwgMCwgMC4yNSksIDAgMTBweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yMik7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1pbi1oZWlnaHQ6IDUyMHB4O1xuICBtYXgtd2lkdGg6IDYwMHB4O1xuICBtaW4td2lkdGg6IDYwMHB4O1xufVxuYnV0dG9uIHtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNhNDdkNTtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHBhZGRpbmc6IDEycHggNTBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLmZvcm1jb250cm9sLm5nLWludmFsaWQubmctdG91Y2hlZCB7XG4gIGJvcmRlcjogM3B4IHNvbGlkIHJlZDtcbn1cbiNnZW5kZXJ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHBhZGRpbmc6IDIwcHggMTUwcHg7XG59XG5kaXZ7XG4gIHBhZGRpbmctdG9wOiAxOHB4O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IA2CMA,4BACG;IAAAA,yCAAyB;IAAAA,iBAC3B;;;;;IAeDA,4BACG;IAAAA,0CAA0B;IAAAA,iBAC5B;;;;;IAeDA,4BACG;IAAAA,sEACH;IAAAA,iBAAO;;;ACzEb;AAOA,OAAM,MAAOC,eAAe;EAG1BC,YAAmBC,WAAwB,EAAUC,MAAqB,EAAWC,MAAc;IAAhF,gBAAW,GAAXF,WAAW;IAAuB,WAAM,GAANC,MAAM;IAA0B,WAAM,GAANC,MAAM;IAE3F,qBAAgB,GAAG,0BAA0B;IAE7C,iBAAY,GAAG,yCAAyC;IAExD,oBAAe,GAAG,6CAA6C;EANuC;EAQxGC,QAAQ,CAACC,MAAc;IACrBA,MAAM,CAACC,KAAK,CAACC,QAAQ,GAACC,GAAG,CAACC,IAAI,CAACJ,MAAM,CAACC,KAAK,CAACC,QAAQ,EAAG,QAAQ,CAAC;IAChEG,OAAO,CAACC,GAAG,CAACN,MAAM,CAACC,KAAK,CAAC;IACzB,IAAI,CAACL,WAAW,CAACW,OAAO,CAACP,MAAM,CAACC,KAAK,CAAC,CAACO,SAAS,CAC9C,MAAK;MACH,IAAI,CAACC,aAAa,CAACT,MAAM,CAAC;IAC5B,CAAC,EACAU,GAAiB,IAAI;MACpB,IAAI,CAACC,WAAW,CAACD,GAAG,CAAC;IACvB,CAAC,CACF;EACH;EAEAD,aAAa,CAACT,MAAc;IAC1BA,MAAM,CAACY,SAAS,EAAE;IAClB,IAAI,CAACf,MAAM,CAACgB,OAAO,CAAC,wBAAwB,CAAC;IAC7C,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,8BAA8B,CAAC,CAAC;EACxD;EAEAH,WAAW,CAACD,GAAiB;IAC3B,IAAI,CAACb,MAAM,CAACkB,KAAK,CAAC,GAAGL,GAAG,CAACM,MAAM,UAAUN,GAAG,CAACO,IAAI,EAAE,CAAC;EACtD;;AAhCavB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDb5B7B,6BAAyB;MACzBA,8BAAsC;MAC9BA;QAAAA;QAAA;QAAA,OAAYA,gCAAkB;MAAA,EAAC;MACnCA,0BAAI;MAAAA,uBAAO;MAAAA,iBAAK;MAChBA,2BAAK;MACHA,2BAUE;MA4BFA,oEAEC;MAEDA,+BAWE;MAEFA,oEAEC;MAEDA,iCAYE;MACFA,oEAEO;MACPA,4BAAK;MACkCA,uBAAM;MAAAA,iBAAS;MAGtDA,4BAAK;MAC+CA,sBAAK;MAAAA,iBAAS;;;;;;;MAhDhEA,eAA4B;MAA5BA,8CAA4B;MAMvBA,eAAqC;MAArCA,gDAAqC;MAiBrCA,eAAmC;MAAnCA,gDAAmC;MAWxCA,eAA2B;MAA3BA,6CAA2B;MAMtBA,eAAyC;MAAzCA,gDAAyC;MAItCA,eAA4B;MAA5BA,qCAA4B","names":["i0","SignUpComponent","constructor","userservice","toastr","router","onSubmit","myForm","value","password","jwt","sign","console","log","addUser","subscribe","handleSuccess","err","handleError","resetForm","success","navigate","error","status","name","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/asplap3262/Desktop/Project(MEAN)/front-end/src/app/login/sign-up/sign-up.component.html","/home/asplap3262/Desktop/Project(MEAN)/front-end/src/app/login/sign-up/sign-up.component.ts"],"sourcesContent":["<app-navbar></app-navbar>\n<div class=\"container\" id=\"container\">\n  <form (ngSubmit)=\"onSubmit(userForm)\" #userForm=\"ngForm\">\n    <h1>Sign-up</h1>\n    <div>\n      <input\n        id=\"fname\"\n        name=\"fname\"\n        type=\"text\"\n        class=\"formcontrol\"\n        placeholder=\"Enter your first name\"\n        autocomplete=\"off\"\n        ngModel\n        required\n        fname\n      />\n\n      <input\n        id=\"lname\"\n        name=\"lname\"\n        type=\"text\"\n        class=\"formcontrol\"\n        placeholder=\"Enter your last name\"\n        autocomplete=\"off\"\n        ngModel\n        required\n        lname\n      />\n\n      <input\n        id=\"number\"\n        name=\"number\"\n        type=\"text\"\n        class=\"formcontrol\"\n        placeholder=\"Enter your Mobile Number\"\n        autocomplete=\"off\"\n        ngModel\n        [pattern]=\"mobNumberPattern\"\n        required\n        number\n        #number=\"ngModel\"\n      />\n\n      <span *ngIf=\"!number.valid && number.touched\"\n        >Please enter valid number</span\n      >\n\n      <input\n        type=\"text\"\n        id=\"email\"\n        class=\"formcontrol\"\n        name=\"email\"\n        placeholder=\"Enter your Mail Id\"\n        autocomplete=\"off\"\n        ngModel\n        required=\"email\"\n        email\n        #email=\"ngModel\"\n      />\n\n      <span *ngIf=\"!email.valid && email.touched\"\n        >Please enter valid mail-id</span\n      >\n\n      <input\n        type=\"password\"\n        id=\"password\"\n        class=\"formcontrol\"\n        name=\"password\"\n        placeholder=\"Enter the new passsword\"\n        autocomplete=\"off\"\n        [pattern]=\"passwordPattern\"\n        ngModel\n        #password=\"ngModel\"\n        required\n        password\n      />\n      <span *ngIf=\"!password.valid && password.touched\"\n        >Password is required in requested format e.g Abcd@123\n      </span>\n      <div>\n        <button [disabled]=\"!userForm.valid\">Submit</button>\n      </div>\n\n      <div>\n        <button routerLink=\"/loginSignUp-path/login-path\">Login</button>\n      </div>\n    </div>\n  </form>\n</div>\n\n","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from 'src/app/Services/user.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { errorMessage } from 'src/app/Services/Guard/product';\nimport { Router } from '@angular/router';\n// import jwt from 'jwt-encode';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css'],\n})\nexport class SignUpComponent {\n  password!: string;\n\n  constructor(public userservice: UserService, private toastr: ToastrService , private router :Router) {}\n\n  mobNumberPattern = /^((\\+91-?)|0)?[0-9]{10}$/;\n\n  Emailpattern = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\n\n  passwordPattern = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$/;\n\nonSubmit(myForm: NgForm) {\n  myForm.value.password=jwt.sign(myForm.value.password , \"secret\")\n  console.log(myForm.value)\n  this.userservice.addUser(myForm.value).subscribe(\n    () => {\n      this.handleSuccess(myForm);\n    },\n    (err: errorMessage) => {\n      this.handleError(err);\n    }\n  );\n}\n\nhandleSuccess(myForm: NgForm) {\n  myForm.resetForm();\n  this.toastr.success('Sign-up Successfull..!');\n  this.router.navigate(['/loginSignUp-path/login-path'])\n}\n\nhandleError(err: errorMessage) {\n  this.toastr.error(`${err.status} Error ${err.name}`);\n}\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}