{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class UserService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.url = 'http://localhost:8080';\n  }\n  getUser() {\n    return localStorage.getItem('Active-User');\n  }\n  logout() {\n    localStorage.clear();\n    this.router.navigate(['/home-path/user-home-path']);\n  }\n  addUser(data) {\n    return this.http.post(`${this.url}/user/`, data);\n  }\n  addProduct(data) {\n    return this.http.post(`${this.url}/cart/`, data);\n  }\n  getCart(user, data) {\n    return this.http.get(`${this.url}/cart?deliveryStatus=${data}&userId=${user}`);\n  }\n  getSingle(data) {\n    return this.http.get(`${this.url}/cart/${data}`);\n  }\n  getSingleProduct(data) {\n    return this.http.get(`${this.url}/product/${data}`);\n  }\n  delete(data) {\n    return this.http.delete(`${this.url}/cart/${data}`);\n  }\n  updateDelivery(id, data) {\n    return this.http.put(`${this.url}/cart/${id}`, data);\n  }\n  deleteProduct(id) {\n    return this.http.delete(`${this.url}/product/${id}`);\n  }\n  deleteUser(id) {\n    return this.http.delete(`${this.url}/user/${id}`);\n  }\n  editProduct(id, update) {\n    return this.http.put(`${this.url}/product/${id}`, update);\n  }\n  addProductAdmin(data) {\n    return this.http.post(`${this.url}/product/`, data);\n  }\n  updateDeliveryAdmin(id, data) {\n    return this.http.put(`${this.url}/cart/${id}`, data);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAEpD,QAAG,GAAG,uBAAuB;EAFkC;EAI/DC,OAAO;IACL,OAAOC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EAC5C;EACAC,MAAM;IACJF,YAAY,CAACG,KAAK,EAAE;IACpB,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,2BAA2B,CAAC,CAAC;EACrD;EAEAC,OAAO,CAACC,IAAc;IACpB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,GAAG,IAAI,CAACC,GAAG,QAAQ,EAAEF,IAAI,CAAC;EAClD;EACAG,UAAU,CAACH,IAAS;IAClB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,GAAG,IAAI,CAACC,GAAG,QAAQ,EAACF,IAAI,CAAC;EACjD;EACAI,OAAO,CAACC,IAAQ,EAACL,IAAQ;IACvB,OAAO,IAAI,CAACT,IAAI,CAACe,GAAG,CAAC,GAAG,IAAI,CAACJ,GAAG,wBAAwBF,IAAI,WAAWK,IAAI,EAAE,CAAC;EAChF;EACAE,SAAS,CAACP,IAAY;IACpB,OAAO,IAAI,CAACT,IAAI,CAACe,GAAG,CAAC,GAAG,IAAI,CAACJ,GAAG,SAASF,IAAI,EAAE,CAAC;EAClD;EACAQ,gBAAgB,CAACR,IAAY;IAC3B,OAAO,IAAI,CAACT,IAAI,CAACe,GAAG,CAAC,GAAG,IAAI,CAACJ,GAAG,YAAYF,IAAI,EAAE,CAAC;EACrD;EACAS,MAAM,CAACT,IAAY;IACjB,OAAO,IAAI,CAACT,IAAI,CAACkB,MAAM,CAAC,GAAG,IAAI,CAACP,GAAG,SAASF,IAAI,EAAE,CAAC;EACrD;EACAU,cAAc,CAACC,EAAU,EAAEX,IAAgB;IACzC,OAAO,IAAI,CAACT,IAAI,CAACqB,GAAG,CAAC,GAAG,IAAI,CAACV,GAAG,SAASS,EAAE,EAAE,EAAEX,IAAI,CAAC;EACtD;EACAa,aAAa,CAACF,EAAU;IACtB,OAAO,IAAI,CAACpB,IAAI,CAACkB,MAAM,CAAC,GAAG,IAAI,CAACP,GAAG,YAAYS,EAAE,EAAE,CAAC;EACtD;EACAG,UAAU,CAACH,EAAU;IACnB,OAAO,IAAI,CAACpB,IAAI,CAACkB,MAAM,CAAC,GAAG,IAAI,CAACP,GAAG,SAASS,EAAE,EAAE,CAAC;EACnD;EACAI,WAAW,CAACJ,EAAU,EAAEK,MAAkB;IACxC,OAAO,IAAI,CAACzB,IAAI,CAACqB,GAAG,CAAC,GAAG,IAAI,CAACV,GAAG,YAAYS,EAAE,EAAE,EAAEK,MAAM,CAAC;EAC3D;EACAC,eAAe,CAACjB,IAAQ;IACtB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,GAAG,IAAI,CAACC,GAAG,WAAW,EAAEF,IAAI,CAAC;EACrD;EACAkB,mBAAmB,CAACP,EAAU,EAAEX,IAAgB;IAC9C,OAAO,IAAI,CAACT,IAAI,CAACqB,GAAG,CAAC,GAAG,IAAI,CAACV,GAAG,SAASS,EAAE,EAAE,EAAEX,IAAI,CAAC;EACtD;;AAhDWX,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA8B,SAAX9B,WAAW;EAAA+B,YAFV;AAAM","names":["UserService","constructor","http","router","getUser","localStorage","getItem","logout","clear","navigate","addUser","data","post","url","addProduct","getCart","user","get","getSingle","getSingleProduct","delete","updateDelivery","id","put","deleteProduct","deleteUser","editProduct","update","addProductAdmin","updateDeliveryAdmin","factory","providedIn"],"sourceRoot":"","sources":["/home/asplap3262/Desktop/Project(MEAN)/front-end/src/app/Services/user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AddProduct } from './Guard/product';\nimport { UserData } from './Guard/sign-up';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient, private router: Router) {}\n\n  url = 'http://localhost:8080';\n\n  getUser() {\n    return localStorage.getItem('Active-User');\n  }\n  logout() {\n    localStorage.clear();\n    this.router.navigate(['/home-path/user-home-path']);\n  }\n\n  addUser(data: UserData\\\\) {\n    return this.http.post(`${this.url}/user/`, data);\n  }\n  addProduct(data: any) {\n    return this.http.post(`${this.url}/cart/`,data);\n  }\n  getCart(user:any,data:any) {\n    return this.http.get(`${this.url}/cart?deliveryStatus=${data}&userId=${user}`);\n  }\n  getSingle(data: number) {\n    return this.http.get(`${this.url}/cart/${data}`);\n  }\n  getSingleProduct(data: number) {\n    return this.http.get(`${this.url}/product/${data}`);\n  }\n  delete(data: number) {\n    return this.http.delete(`${this.url}/cart/${data}`);\n  }\n  updateDelivery(id: number, data: AddProduct) {\n    return this.http.put(`${this.url}/cart/${id}`, data);\n  }\n  deleteProduct(id: number) {\n    return this.http.delete(`${this.url}/product/${id}`);\n  }\n  deleteUser(id: number) {\n    return this.http.delete(`${this.url}/user/${id}`);\n  }\n  editProduct(id: number, update: AddProduct) {\n    return this.http.put(`${this.url}/product/${id}`, update);\n  }\n  addProductAdmin(data:any) {\n    return this.http.post(`${this.url}/product/`, data);\n  }\n  updateDeliveryAdmin(id: number, data: AddProduct) {\n    return this.http.put(`${this.url}/cart/${id}`, data);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}